<?xml version="1.0"?>


<project name="Talks" default="slides" basedir=".">
    <description>
        Build.xml file for the Talks
    </description>

    <property name="root.dir"              value="${basedir}"/>
    <property name="tmp.dir"               value="${root.dir}/tmp"/>
    <property name="git.executable"        value="git"/>
    <property name="asciidoc.executable"   value="asciidoctor"/>
    <property name="asciidoc.deckjs"       value="asciidoctor-deck.js"/>
    <property name="asciidoc.backends.dir" value="${basedir}/../${asciidoc.deckjs}/templates"/>
    <property name="asciidoc.backends.url" value="https://github.com/asciidoctor/asciidoctor-deck.js"/>
    <property name="deck.js"               value="deck.js"/>
    <property name="deck.js.dir"           value="${basedir}/../${deck.js}"/>
    <property name="deck.js.url"           value="git://github.com/imakewebthings/deck.js.git"/>
    <property name="SixFinancial"          value="SixFinancial"/>


    <target name="check-asciidoc-backends-exists" description="Checks if asciidoc_backends dir exists">
        <available file="${asciidoc.backends.dir}" type="dir" property="asciidoc.backends.exists"/>
    </target>

    <target name="get-asciidoc-backends" depends="check-asciidoc-backends-exists"
            description="Downloads asciidoc-backends" unless="asciidoc.backends.exists">
        <echo message="downloading ${asciidoc.deckjs}"/>
        <exec executable="${git.executable}" dir="${basedir}/../">
            <arg line="clone ${asciidoc.backends.url}"/>
        </exec>
    </target>

    <target name="check-deckjs-exists" description="Checks if deck.js dir exists">
        <available file="${deck.js.dir}" type="dir" property="deckjs.exists"/>
    </target>

    <target name="get-deckjs" depends="check-deckjs-exists"
            description="Downloads deck.js and creates a symbolic link to it" unless="deckjs.exists">
        <echo message="downloading ${deck.js} to ${deck.js.dir}"/>
        <exec executable="${git.executable}" dir="${basedir}/../">
            <arg line="clone ${deck.js.url}"/>
        </exec>
        <symlink link="${deck.js}" resource="${deck.js.dir}" overwrite="false" failonerror="false"/>
    </target>

    <target name="slides" description="Generates HTML for all dirs under slides" depends="get-asciidoc-backends,get-deckjs">
        <make-slides dir="${SixFinancial}"/>
    </target>


    <target name="clean" description="Cleans generated files">
        <cleanup dir="${SixFinancial}"/>
        <delete>
            <fileset dir="${root.dir}" defaultexcludes="no" includes="**/*~"/>
        </delete>

    </target>

    <macrodef name="cleanup">
        <attribute name="dir"/>
        <sequential>
            <echo message="Processing @{dir}"/>
            <symlink action="delete" link="@{dir}/${deck.js}"/>
            <delete>
                <fileset dir="${root.dir}" defaultexcludes="no">
                    <include name="**/*~"/>
                </fileset>
                <fileset dir="@{dir}" includes="*.html"/>
            </delete>
        </sequential>
    </macrodef>


    <macrodef name="make-slides">
        <attribute name="dir"/>
        <sequential>
            <echo message="Processing @{dir}"/>
            <symlink link="@{dir}/${deck.js}" resource="${deck.js.dir}" overwrite="false" failonerror="false"/>
            <apply executable="${asciidoc.executable}" dir="@{dir}" relative="true" verbose="true">
                <arg line="-T ${asciidoc.backends.dir}/haml"/>
                <fileset dir="@{dir}" includes="*.adoc"/>
            </apply>
        </sequential>
    </macrodef>



</project>
