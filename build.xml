<?xml version="1.0"?>


<project name="workshop" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <description>
        Ant/ivy based build.xml file for the Talks
    </description>

    <property name="root.dir"              value="${basedir}"/>
    <property name="tmp.dir"               value="${root.dir}/tmp"/>
    <property name="slides.dir"            value="${root.dir}/slides"/>
    <property name="timestamp"             value=".timestamp"/>
    <property name="maven.executable"      value="mvn"/>
    <property name="git.executable"        value="git"/>
    <property name="asciidoc.executable"   value="asciidoctor"/>
    <property name="asciidoc.backends"     value="asciidoctor-backends"/>
    <property name="asciidoc.backends.dir" value="${basedir}/../${asciidoc.backends}"/>
    <property name="asciidoc.backends.url" value="git://github.com/asciidoctor/asciidoctor-backends.git"/>
    <property name="deck.js"               value="deck.js"/>
    <property name="deck.js.dir"           value="${basedir}/../${deck.js}"/>
    <property name="deck.js.url"           value="git://github.com/imakewebthings/deck.js.git"/>


    <target name="check-asciidoc-backends-exists" description="Checks if asciidoc_backends dir exists">
        <available file="${asciidoc.backends.dir}" type="dir" property="asciidoc.backends.exists"/>
    </target>

    <target name="get-asciidoc-backends" depends="check-asciidoc-backends-exists"
            description="Downloads asciidoc-backends" unless="asciidoc.backends.exists">
        <echo message="downloading ${asciidoc.backends}"/>
        <exec executable="${git.executable}" dir="${basedir}/../">
            <arg line="clone ${asciidoc.backends.url}"/>
        </exec>
    </target>

    <target name="check-deckjs-exists" description="Checks if deck.js dir exists">
        <available file="${deck.js.dir}" type="dir" property="deckjs.exists"/>
    </target>

    <target name="get-deckjs" depends="check-deckjs-exists"
            description="Downloads deck.js and creates a symbolic link to it" unless="deckjs.exists">
        <echo message="downloading ${deck.js} to ${deck.js.dir}"/>
        <exec executable="${git.executable}" dir="${basedir}/../">
            <arg line="clone ${deck.js.url}"/>
        </exec>
        <symlink link="${slides.dir}/${deck.js}" resource="${deck.js.dir}" overwrite="false" failonerror="false"/>
    </target>


    <target name="slides" description="Generates the slides using asciidoctor"
            depends="get-asciidoc-backends,get-deckjs">
        <symlink link="${slides.dir}/${deck.js}" resource="${deck.js.dir}" overwrite="false" failonerror="false"/>
        <run-asciidoc dir="${basedir}/slides" input="welcome.adoc"/>
        <run-asciidoc dir="${basedir}/slides" input="admin.adoc"/>
        <run-asciidoc dir="${basedir}/slides" input="advanced.adoc"/>
        <run-asciidoc dir="${basedir}/slides" input="blocks.adoc"/>
        <run-asciidoc dir="${basedir}/slides" input="prot_overview.adoc"/>
        <run-asciidoc dir="${basedir}/slides" input="protocols.adoc"/>
        <run-asciidoc dir="${basedir}/slides" input="using.adoc"/>
        <run-asciidoc dir="${basedir}/slides" input="summary.adoc"/>
    </target>


    <target name="clean"
            description="Removes all class files and ./dist">
        <symlink action="delete" link="${slides.dir}/${deck.js}"/>
        <delete dir="${tmp.dir}" failonerror="false"/>
        <delete dir="${slides.dir}/build/"/>
        <delete>
            <fileset dir="${root.dir}" defaultexcludes="no">
                <include name="**/*~"/>
            </fileset>
            <fileset dir="${basedir}/slides">
                <include name="*.html"/>
            </fileset>
        </delete>
    </target>


    <macrodef name="run-asciidoc">
        <attribute name="dir"/>
        <attribute name="input"/>
        <sequential>
            <mkdir dir="@{dir}/build"/>
            <echo message="Processing @{input} in @{dir}"/>
            <exec executable="${asciidoc.executable}" dir="@{dir}">
                <arg line="-T ${asciidoc.backends.dir}/haml @{input}"/>
            </exec>
        </sequential>
    </macrodef>


</project>
